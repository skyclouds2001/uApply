// Code generated by goctl. DO NOT EDIT!
// Source: inter.proto

package server

import (
	"context"

	"uapply-micro/service/interviewer/cmd/rpc/inter"
	"uapply-micro/service/interviewer/cmd/rpc/internal/logic"
	"uapply-micro/service/interviewer/cmd/rpc/internal/svc"
)

type InterviewerServer struct {
	svcCtx *svc.ServiceContext
	inter.UnimplementedInterviewerServer
}

func NewInterviewerServer(svcCtx *svc.ServiceContext) *InterviewerServer {
	return &InterviewerServer{
		svcCtx: svcCtx,
	}
}

// 添加面试官接口
func (s *InterviewerServer) AddInter(ctx context.Context, in *inter.AddReq) (*inter.Empty, error) {
	l := logic.NewAddInterLogic(ctx, s.svcCtx)
	return l.AddInter(in)
}

// 删除面试官
func (s *InterviewerServer) DeleteInter(ctx context.Context, in *inter.InterReq) (*inter.Empty, error) {
	l := logic.NewDeleteInterLogic(ctx, s.svcCtx)
	return l.DeleteInter(in)
}

// 获取所有面试官
func (s *InterviewerServer) GetInters(ctx context.Context, in *inter.IntersReq) (*inter.IntersResp, error) {
	l := logic.NewGetIntersLogic(ctx, s.svcCtx)
	return l.GetInters(in)
}

// 修改面试官
func (s *InterviewerServer) UpdateInter(ctx context.Context, in *inter.UpdateInterReq) (*inter.Empty, error) {
	l := logic.NewUpdateInterLogic(ctx, s.svcCtx)
	return l.UpdateInter(in)
}
