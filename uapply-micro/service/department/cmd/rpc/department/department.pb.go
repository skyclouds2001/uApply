// Code generated by protoc-gen-go. DO NOT EDIT.
// source: department.proto

package department

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UserUid struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserUid) Reset()         { *m = UserUid{} }
func (m *UserUid) String() string { return proto.CompactTextString(m) }
func (*UserUid) ProtoMessage()    {}
func (*UserUid) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{1}
}

func (m *UserUid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUid.Unmarshal(m, b)
}
func (m *UserUid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUid.Marshal(b, m, deterministic)
}
func (m *UserUid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUid.Merge(m, src)
}
func (m *UserUid) XXX_Size() int {
	return xxx_messageInfo_UserUid.Size(m)
}
func (m *UserUid) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUid.DiscardUnknown(m)
}

var xxx_messageInfo_UserUid proto.InternalMessageInfo

func (m *UserUid) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type RbdReq struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RbdReq) Reset()         { *m = RbdReq{} }
func (m *RbdReq) String() string { return proto.CompactTextString(m) }
func (*RbdReq) ProtoMessage()    {}
func (*RbdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{2}
}

func (m *RbdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RbdReq.Unmarshal(m, b)
}
func (m *RbdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RbdReq.Marshal(b, m, deterministic)
}
func (m *RbdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RbdReq.Merge(m, src)
}
func (m *RbdReq) XXX_Size() int {
	return xxx_messageInfo_RbdReq.Size(m)
}
func (m *RbdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RbdReq.DiscardUnknown(m)
}

var xxx_messageInfo_RbdReq proto.InternalMessageInfo

func (m *RbdReq) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type RbdRsp struct {
	Data                 []*EachDep `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RbdRsp) Reset()         { *m = RbdRsp{} }
func (m *RbdRsp) String() string { return proto.CompactTextString(m) }
func (*RbdRsp) ProtoMessage()    {}
func (*RbdRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{3}
}

func (m *RbdRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RbdRsp.Unmarshal(m, b)
}
func (m *RbdRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RbdRsp.Marshal(b, m, deterministic)
}
func (m *RbdRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RbdRsp.Merge(m, src)
}
func (m *RbdRsp) XXX_Size() int {
	return xxx_messageInfo_RbdRsp.Size(m)
}
func (m *RbdRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RbdRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RbdRsp proto.InternalMessageInfo

func (m *RbdRsp) GetData() []*EachDep {
	if m != nil {
		return m.Data
	}
	return nil
}

type EachDep struct {
	Dep                  []*RegData `protobuf:"bytes,1,rep,name=dep,proto3" json:"dep,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EachDep) Reset()         { *m = EachDep{} }
func (m *EachDep) String() string { return proto.CompactTextString(m) }
func (*EachDep) ProtoMessage()    {}
func (*EachDep) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{4}
}

func (m *EachDep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EachDep.Unmarshal(m, b)
}
func (m *EachDep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EachDep.Marshal(b, m, deterministic)
}
func (m *EachDep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EachDep.Merge(m, src)
}
func (m *EachDep) XXX_Size() int {
	return xxx_messageInfo_EachDep.Size(m)
}
func (m *EachDep) XXX_DiscardUnknown() {
	xxx_messageInfo_EachDep.DiscardUnknown(m)
}

var xxx_messageInfo_EachDep proto.InternalMessageInfo

func (m *EachDep) GetDep() []*RegData {
	if m != nil {
		return m.Dep
	}
	return nil
}

type RegData struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	First                int32    `protobuf:"varint,2,opt,name=first,proto3" json:"first,omitempty"`
	Second               int32    `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty"`
	Final                int32    `protobuf:"varint,4,opt,name=final,proto3" json:"final,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegData) Reset()         { *m = RegData{} }
func (m *RegData) String() string { return proto.CompactTextString(m) }
func (*RegData) ProtoMessage()    {}
func (*RegData) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{5}
}

func (m *RegData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegData.Unmarshal(m, b)
}
func (m *RegData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegData.Marshal(b, m, deterministic)
}
func (m *RegData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegData.Merge(m, src)
}
func (m *RegData) XXX_Size() int {
	return xxx_messageInfo_RegData.Size(m)
}
func (m *RegData) XXX_DiscardUnknown() {
	xxx_messageInfo_RegData.DiscardUnknown(m)
}

var xxx_messageInfo_RegData proto.InternalMessageInfo

func (m *RegData) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RegData) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *RegData) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *RegData) GetFinal() int32 {
	if m != nil {
		return m.Final
	}
	return 0
}

type GetRegRsp struct {
	Rsp                  []*RegInfo `protobuf:"bytes,1,rep,name=rsp,proto3" json:"rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetRegRsp) Reset()         { *m = GetRegRsp{} }
func (m *GetRegRsp) String() string { return proto.CompactTextString(m) }
func (*GetRegRsp) ProtoMessage()    {}
func (*GetRegRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{6}
}

func (m *GetRegRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegRsp.Unmarshal(m, b)
}
func (m *GetRegRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegRsp.Marshal(b, m, deterministic)
}
func (m *GetRegRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegRsp.Merge(m, src)
}
func (m *GetRegRsp) XXX_Size() int {
	return xxx_messageInfo_GetRegRsp.Size(m)
}
func (m *GetRegRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegRsp proto.InternalMessageInfo

func (m *GetRegRsp) GetRsp() []*RegInfo {
	if m != nil {
		return m.Rsp
	}
	return nil
}

type RegInfo struct {
	DepID                int32    `protobuf:"varint,1,opt,name=DepID,proto3" json:"DepID,omitempty"`
	DepName              string   `protobuf:"bytes,2,opt,name=DepName,proto3" json:"DepName,omitempty"`
	OrgID                int32    `protobuf:"varint,3,opt,name=OrgID,proto3" json:"OrgID,omitempty"`
	OrgName              string   `protobuf:"bytes,4,opt,name=OrgName,proto3" json:"OrgName,omitempty"`
	First                int32    `protobuf:"varint,5,opt,name=First,proto3" json:"First,omitempty"`
	Second               int32    `protobuf:"varint,6,opt,name=Second,proto3" json:"Second,omitempty"`
	Final                int32    `protobuf:"varint,7,opt,name=Final,proto3" json:"Final,omitempty"`
	FirstMark            int32    `protobuf:"varint,8,opt,name=FirstMark,proto3" json:"FirstMark,omitempty"`
	FirstEva             string   `protobuf:"bytes,9,opt,name=FirstEva,proto3" json:"FirstEva,omitempty"`
	SecondMark           int32    `protobuf:"varint,10,opt,name=SecondMark,proto3" json:"SecondMark,omitempty"`
	SecondEva            string   `protobuf:"bytes,11,opt,name=SecondEva,proto3" json:"SecondEva,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegInfo) Reset()         { *m = RegInfo{} }
func (m *RegInfo) String() string { return proto.CompactTextString(m) }
func (*RegInfo) ProtoMessage()    {}
func (*RegInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{7}
}

func (m *RegInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegInfo.Unmarshal(m, b)
}
func (m *RegInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegInfo.Marshal(b, m, deterministic)
}
func (m *RegInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegInfo.Merge(m, src)
}
func (m *RegInfo) XXX_Size() int {
	return xxx_messageInfo_RegInfo.Size(m)
}
func (m *RegInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RegInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RegInfo proto.InternalMessageInfo

func (m *RegInfo) GetDepID() int32 {
	if m != nil {
		return m.DepID
	}
	return 0
}

func (m *RegInfo) GetDepName() string {
	if m != nil {
		return m.DepName
	}
	return ""
}

func (m *RegInfo) GetOrgID() int32 {
	if m != nil {
		return m.OrgID
	}
	return 0
}

func (m *RegInfo) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *RegInfo) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *RegInfo) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *RegInfo) GetFinal() int32 {
	if m != nil {
		return m.Final
	}
	return 0
}

func (m *RegInfo) GetFirstMark() int32 {
	if m != nil {
		return m.FirstMark
	}
	return 0
}

func (m *RegInfo) GetFirstEva() string {
	if m != nil {
		return m.FirstEva
	}
	return ""
}

func (m *RegInfo) GetSecondMark() int32 {
	if m != nil {
		return m.SecondMark
	}
	return 0
}

func (m *RegInfo) GetSecondEva() string {
	if m != nil {
		return m.SecondEva
	}
	return ""
}

type MarkInfo struct {
	DepId                int64    `protobuf:"varint,1,opt,name=dep_id,json=depId,proto3" json:"dep_id,omitempty"`
	Mark                 int32    `protobuf:"varint,2,opt,name=Mark,proto3" json:"Mark,omitempty"`
	Eva                  string   `protobuf:"bytes,3,opt,name=Eva,proto3" json:"Eva,omitempty"`
	Uid                  int32    `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MarkTag              string   `protobuf:"bytes,5,opt,name=MarkTag,proto3" json:"MarkTag,omitempty"`
	EvaTag               string   `protobuf:"bytes,6,opt,name=EvaTag,proto3" json:"EvaTag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkInfo) Reset()         { *m = MarkInfo{} }
func (m *MarkInfo) String() string { return proto.CompactTextString(m) }
func (*MarkInfo) ProtoMessage()    {}
func (*MarkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{8}
}

func (m *MarkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkInfo.Unmarshal(m, b)
}
func (m *MarkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkInfo.Marshal(b, m, deterministic)
}
func (m *MarkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkInfo.Merge(m, src)
}
func (m *MarkInfo) XXX_Size() int {
	return xxx_messageInfo_MarkInfo.Size(m)
}
func (m *MarkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MarkInfo proto.InternalMessageInfo

func (m *MarkInfo) GetDepId() int64 {
	if m != nil {
		return m.DepId
	}
	return 0
}

func (m *MarkInfo) GetMark() int32 {
	if m != nil {
		return m.Mark
	}
	return 0
}

func (m *MarkInfo) GetEva() string {
	if m != nil {
		return m.Eva
	}
	return ""
}

func (m *MarkInfo) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MarkInfo) GetMarkTag() string {
	if m != nil {
		return m.MarkTag
	}
	return ""
}

func (m *MarkInfo) GetEvaTag() string {
	if m != nil {
		return m.EvaTag
	}
	return ""
}

type RegReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OrgId                int32    `protobuf:"varint,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	DepId                int32    `protobuf:"varint,3,opt,name=depId,proto3" json:"depId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegReq) Reset()         { *m = RegReq{} }
func (m *RegReq) String() string { return proto.CompactTextString(m) }
func (*RegReq) ProtoMessage()    {}
func (*RegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{9}
}

func (m *RegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegReq.Unmarshal(m, b)
}
func (m *RegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegReq.Marshal(b, m, deterministic)
}
func (m *RegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegReq.Merge(m, src)
}
func (m *RegReq) XXX_Size() int {
	return xxx_messageInfo_RegReq.Size(m)
}
func (m *RegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegReq proto.InternalMessageInfo

func (m *RegReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RegReq) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *RegReq) GetDepId() int32 {
	if m != nil {
		return m.DepId
	}
	return 0
}

type CreReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	OrgId                int32    `protobuf:"varint,4,opt,name=orgId,proto3" json:"orgId,omitempty"`
	OrgName              string   `protobuf:"bytes,5,opt,name=orgName,proto3" json:"orgName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreReq) Reset()         { *m = CreReq{} }
func (m *CreReq) String() string { return proto.CompactTextString(m) }
func (*CreReq) ProtoMessage()    {}
func (*CreReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{10}
}

func (m *CreReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreReq.Unmarshal(m, b)
}
func (m *CreReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreReq.Marshal(b, m, deterministic)
}
func (m *CreReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreReq.Merge(m, src)
}
func (m *CreReq) XXX_Size() int {
	return xxx_messageInfo_CreReq.Size(m)
}
func (m *CreReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreReq proto.InternalMessageInfo

func (m *CreReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CreReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreReq) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *CreReq) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

type UdpReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Id                   int32    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	OrgId                int32    `protobuf:"varint,5,opt,name=orgId,proto3" json:"orgId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpReq) Reset()         { *m = UdpReq{} }
func (m *UdpReq) String() string { return proto.CompactTextString(m) }
func (*UdpReq) ProtoMessage()    {}
func (*UdpReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{11}
}

func (m *UdpReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpReq.Unmarshal(m, b)
}
func (m *UdpReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpReq.Marshal(b, m, deterministic)
}
func (m *UdpReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpReq.Merge(m, src)
}
func (m *UdpReq) XXX_Size() int {
	return xxx_messageInfo_UdpReq.Size(m)
}
func (m *UdpReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpReq.DiscardUnknown(m)
}

var xxx_messageInfo_UdpReq proto.InternalMessageInfo

func (m *UdpReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UdpReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UdpReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UdpReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UdpReq) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

type CreInfoRsp struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OrgId                int32    `protobuf:"varint,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreInfoRsp) Reset()         { *m = CreInfoRsp{} }
func (m *CreInfoRsp) String() string { return proto.CompactTextString(m) }
func (*CreInfoRsp) ProtoMessage()    {}
func (*CreInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{12}
}

func (m *CreInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreInfoRsp.Unmarshal(m, b)
}
func (m *CreInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreInfoRsp.Marshal(b, m, deterministic)
}
func (m *CreInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreInfoRsp.Merge(m, src)
}
func (m *CreInfoRsp) XXX_Size() int {
	return xxx_messageInfo_CreInfoRsp.Size(m)
}
func (m *CreInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreInfoRsp proto.InternalMessageInfo

func (m *CreInfoRsp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreInfoRsp) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

type DepReq struct {
	Id                   []int32  `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	OrgId                int32    `protobuf:"varint,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepReq) Reset()         { *m = DepReq{} }
func (m *DepReq) String() string { return proto.CompactTextString(m) }
func (*DepReq) ProtoMessage()    {}
func (*DepReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{13}
}

func (m *DepReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepReq.Unmarshal(m, b)
}
func (m *DepReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepReq.Marshal(b, m, deterministic)
}
func (m *DepReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepReq.Merge(m, src)
}
func (m *DepReq) XXX_Size() int {
	return xxx_messageInfo_DepReq.Size(m)
}
func (m *DepReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DepReq.DiscardUnknown(m)
}

var xxx_messageInfo_DepReq proto.InternalMessageInfo

func (m *DepReq) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DepReq) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

type DepInfoRsp struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Account              string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepInfoRsp) Reset()         { *m = DepInfoRsp{} }
func (m *DepInfoRsp) String() string { return proto.CompactTextString(m) }
func (*DepInfoRsp) ProtoMessage()    {}
func (*DepInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{14}
}

func (m *DepInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepInfoRsp.Unmarshal(m, b)
}
func (m *DepInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepInfoRsp.Marshal(b, m, deterministic)
}
func (m *DepInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepInfoRsp.Merge(m, src)
}
func (m *DepInfoRsp) XXX_Size() int {
	return xxx_messageInfo_DepInfoRsp.Size(m)
}
func (m *DepInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DepInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DepInfoRsp proto.InternalMessageInfo

func (m *DepInfoRsp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DepInfoRsp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DepInfoRsp) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *DepInfoRsp) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type DepsInfoRsp struct {
	Deps                 []*DepInfoRsp `protobuf:"bytes,1,rep,name=deps,proto3" json:"deps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DepsInfoRsp) Reset()         { *m = DepsInfoRsp{} }
func (m *DepsInfoRsp) String() string { return proto.CompactTextString(m) }
func (*DepsInfoRsp) ProtoMessage()    {}
func (*DepsInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{15}
}

func (m *DepsInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepsInfoRsp.Unmarshal(m, b)
}
func (m *DepsInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepsInfoRsp.Marshal(b, m, deterministic)
}
func (m *DepsInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepsInfoRsp.Merge(m, src)
}
func (m *DepsInfoRsp) XXX_Size() int {
	return xxx_messageInfo_DepsInfoRsp.Size(m)
}
func (m *DepsInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DepsInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DepsInfoRsp proto.InternalMessageInfo

func (m *DepsInfoRsp) GetDeps() []*DepInfoRsp {
	if m != nil {
		return m.Deps
	}
	return nil
}

type DelReq struct {
	OrgId                int32    `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	DepId                int32    `protobuf:"varint,2,opt,name=depId,proto3" json:"depId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelReq) Reset()         { *m = DelReq{} }
func (m *DelReq) String() string { return proto.CompactTextString(m) }
func (*DelReq) ProtoMessage()    {}
func (*DelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63863e61582d2703, []int{16}
}

func (m *DelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelReq.Unmarshal(m, b)
}
func (m *DelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelReq.Marshal(b, m, deterministic)
}
func (m *DelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelReq.Merge(m, src)
}
func (m *DelReq) XXX_Size() int {
	return xxx_messageInfo_DelReq.Size(m)
}
func (m *DelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelReq proto.InternalMessageInfo

func (m *DelReq) GetOrgId() int32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *DelReq) GetDepId() int32 {
	if m != nil {
		return m.DepId
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "department.Empty")
	proto.RegisterType((*UserUid)(nil), "department.UserUid")
	proto.RegisterType((*RbdReq)(nil), "department.RbdReq")
	proto.RegisterType((*RbdRsp)(nil), "department.RbdRsp")
	proto.RegisterType((*EachDep)(nil), "department.EachDep")
	proto.RegisterType((*RegData)(nil), "department.RegData")
	proto.RegisterType((*GetRegRsp)(nil), "department.GetRegRsp")
	proto.RegisterType((*RegInfo)(nil), "department.RegInfo")
	proto.RegisterType((*MarkInfo)(nil), "department.MarkInfo")
	proto.RegisterType((*RegReq)(nil), "department.RegReq")
	proto.RegisterType((*CreReq)(nil), "department.CreReq")
	proto.RegisterType((*UdpReq)(nil), "department.UdpReq")
	proto.RegisterType((*CreInfoRsp)(nil), "department.CreInfoRsp")
	proto.RegisterType((*DepReq)(nil), "department.DepReq")
	proto.RegisterType((*DepInfoRsp)(nil), "department.DepInfoRsp")
	proto.RegisterType((*DepsInfoRsp)(nil), "department.DepsInfoRsp")
	proto.RegisterType((*DelReq)(nil), "department.DelReq")
}

func init() { proto.RegisterFile("department.proto", fileDescriptor_63863e61582d2703) }

var fileDescriptor_63863e61582d2703 = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xdb, 0x38,
	0x10, 0x86, 0x2d, 0x59, 0xb2, 0xc7, 0x40, 0x90, 0xe5, 0x26, 0x59, 0xc1, 0xbb, 0x58, 0x04, 0x04,
	0x82, 0x06, 0x3d, 0x04, 0xcd, 0x0f, 0xd2, 0xb4, 0xc7, 0xc6, 0x76, 0xe1, 0x43, 0x1a, 0x40, 0xa9,
	0xcf, 0x01, 0x63, 0x32, 0xaa, 0x51, 0x47, 0x62, 0x44, 0x25, 0x6d, 0xae, 0xbd, 0xf6, 0x39, 0xfa,
	0x0c, 0x7d, 0xbd, 0x62, 0x86, 0x94, 0x2d, 0xc7, 0x72, 0x4f, 0xbd, 0xf1, 0x1b, 0xce, 0x70, 0xbe,
	0x6f, 0x38, 0x1c, 0xc2, 0xa6, 0x54, 0x5a, 0xe4, 0xc5, 0x9d, 0x4a, 0x8b, 0x03, 0x9d, 0x67, 0x45,
	0xc6, 0x60, 0x61, 0xe1, 0x21, 0xb4, 0x06, 0x77, 0xba, 0x78, 0xe2, 0xff, 0x42, 0x38, 0x36, 0x2a,
	0x1f, 0x4f, 0x25, 0xdb, 0x04, 0xef, 0x61, 0x2a, 0xa3, 0xc6, 0x6e, 0x63, 0xdf, 0x8b, 0x71, 0xc9,
	0x7b, 0x10, 0xc4, 0x37, 0x32, 0x56, 0xf7, 0xb8, 0x37, 0x95, 0x26, 0x6a, 0xec, 0x7a, 0xfb, 0xad,
	0x18, 0x97, 0xfc, 0xd0, 0xee, 0x19, 0xcd, 0x5e, 0x80, 0x2f, 0x45, 0x21, 0x68, 0xb3, 0x7b, 0xf4,
	0xf7, 0x41, 0x25, 0xf1, 0x40, 0x4c, 0x3e, 0xf5, 0x95, 0x8e, 0xc9, 0x81, 0xbf, 0x82, 0xd0, 0x19,
	0xd8, 0x1e, 0x78, 0x52, 0xe9, 0xba, 0x90, 0x58, 0x25, 0x7d, 0x51, 0x88, 0x18, 0xf7, 0xf9, 0x35,
	0x84, 0x0e, 0x57, 0xd9, 0xb5, 0x88, 0x1d, 0xdb, 0x82, 0xd6, 0xed, 0x34, 0x37, 0x45, 0xd4, 0x24,
	0x9b, 0x05, 0x6c, 0x07, 0x02, 0xa3, 0x26, 0x59, 0x2a, 0x23, 0x8f, 0xcc, 0x0e, 0x59, 0xef, 0x54,
	0xcc, 0x22, 0xbf, 0xf4, 0x4e, 0xc5, 0x8c, 0x1f, 0x41, 0xe7, 0xbd, 0x2a, 0x62, 0x95, 0xa0, 0x90,
	0x3d, 0xf0, 0x72, 0xb3, 0x8e, 0xd4, 0x28, 0xbd, 0xcd, 0x62, 0xdc, 0xe7, 0x3f, 0x9a, 0xc4, 0x0a,
	0x0d, 0x78, 0x6a, 0x5f, 0xe9, 0x51, 0xdf, 0xf1, 0xb2, 0x80, 0x45, 0x10, 0xf6, 0x95, 0xfe, 0x20,
	0xee, 0x14, 0x71, 0xeb, 0xc4, 0x25, 0x44, 0xff, 0xcb, 0x3c, 0x19, 0xf5, 0x1d, 0x39, 0x0b, 0xd0,
	0xff, 0x32, 0x4f, 0xc8, 0xdf, 0xb7, 0xfe, 0x0e, 0xa2, 0xff, 0x90, 0x34, 0xb6, 0xac, 0xff, 0xb0,
	0xd4, 0x78, 0x65, 0x35, 0x06, 0x56, 0xe3, 0xd5, 0x5c, 0xe3, 0x90, 0x34, 0x86, 0xa5, 0x77, 0x2a,
	0x66, 0xec, 0x3f, 0xe8, 0x50, 0xd8, 0x85, 0xc8, 0x3f, 0x47, 0x6d, 0xda, 0x59, 0x18, 0x58, 0x0f,
	0xda, 0x04, 0x06, 0x8f, 0x22, 0xea, 0x50, 0xf2, 0x39, 0x66, 0xff, 0x03, 0xd8, 0x93, 0x29, 0x14,
	0x28, 0xb4, 0x62, 0xc1, 0x93, 0x2d, 0xc2, 0xe0, 0x2e, 0x05, 0x2f, 0x0c, 0xfc, 0x7b, 0x03, 0xda,
	0xe8, 0x46, 0x85, 0xda, 0x86, 0x40, 0x2a, 0x7d, 0x3d, 0xef, 0xaf, 0x96, 0x54, 0x7a, 0x24, 0x19,
	0x03, 0x9f, 0xce, 0xb6, 0x57, 0x48, 0x6b, 0xbc, 0x69, 0x3c, 0xcf, 0xa3, 0xf3, 0x70, 0x89, 0x96,
	0xf1, 0x54, 0xba, 0x9b, 0xc3, 0x25, 0x56, 0x0c, 0x7d, 0x3f, 0x8a, 0x84, 0x2a, 0xd3, 0x89, 0x4b,
	0x88, 0xb5, 0x19, 0x3c, 0x0a, 0xdc, 0x08, 0x68, 0xc3, 0x21, 0x3e, 0x84, 0x00, 0xaf, 0xd9, 0xf6,
	0xf2, 0x6a, 0x27, 0x65, 0x79, 0x32, 0x92, 0x65, 0x27, 0x11, 0x40, 0x2b, 0x91, 0x2c, 0xef, 0x8a,
	0x00, 0xff, 0xd6, 0x80, 0xe0, 0x3c, 0x57, 0x78, 0x10, 0x03, 0x3f, 0xc5, 0x3b, 0x6b, 0x50, 0x22,
	0x5a, 0x23, 0x31, 0x31, 0x99, 0x64, 0x0f, 0x69, 0x51, 0x5e, 0xbd, 0x83, 0x58, 0x68, 0x2d, 0x8c,
	0xf9, 0x92, 0xe5, 0xd2, 0x69, 0x9b, 0xe3, 0x05, 0x01, 0xbf, 0x4a, 0x20, 0x82, 0x30, 0x73, 0x6d,
	0xe1, 0x44, 0x3a, 0xc8, 0xbf, 0x42, 0x30, 0x96, 0xfa, 0xcf, 0x72, 0xd8, 0x80, 0xe6, 0xbc, 0xc6,
	0xcd, 0x6a, 0x51, 0x5a, 0x15, 0x4e, 0xfc, 0x14, 0xe0, 0x3c, 0x57, 0xf4, 0x18, 0x8c, 0xae, 0xcd,
	0x5e, 0x5b, 0x4c, 0x7e, 0x00, 0x01, 0x0e, 0x02, 0x75, 0xef, 0xf2, 0xd8, 0x49, 0xd2, 0x5c, 0x57,
	0x7c, 0x7e, 0x0b, 0x80, 0x6f, 0xc9, 0xe5, 0x29, 0x63, 0x4a, 0x6e, 0x65, 0xde, 0x66, 0xbd, 0x6a,
	0x6f, 0xbd, 0x6a, 0x7f, 0x59, 0x35, 0x7f, 0x03, 0xdd, 0xbe, 0xd2, 0xa6, 0x4c, 0xf4, 0x12, 0x7c,
	0xa9, 0xb4, 0x71, 0x33, 0x60, 0xa7, 0x3a, 0x03, 0x16, 0x74, 0x62, 0xf2, 0xe1, 0x27, 0x28, 0x69,
	0x86, 0x92, 0xe6, 0x12, 0x1a, 0xb5, 0xfd, 0xd3, 0xac, 0xf4, 0xcf, 0xd1, 0x4f, 0x1f, 0x2a, 0x83,
	0x98, 0xbd, 0x86, 0xce, 0x24, 0x57, 0xa2, 0x50, 0x38, 0x15, 0x59, 0x35, 0x9f, 0x6d, 0xb2, 0xde,
	0xce, 0x33, 0x5b, 0xc9, 0xf4, 0x04, 0x82, 0x44, 0x15, 0x2b, 0x51, 0xb6, 0xc8, 0xbd, 0x35, 0xcc,
	0xd9, 0x29, 0x84, 0x36, 0xca, 0xd4, 0x86, 0xfd, 0xf3, 0xcc, 0x66, 0x2a, 0xd9, 0x1e, 0xb4, 0x5c,
	0xc9, 0x66, 0x9b, 0x70, 0x6d, 0x36, 0x5b, 0xa1, 0x1a, 0x8e, 0xb3, 0xdf, 0x45, 0x1d, 0x42, 0x3b,
	0x56, 0xc9, 0xd4, 0x14, 0x2a, 0x5f, 0x8e, 0xb3, 0xef, 0xb7, 0xf7, 0xd7, 0xd2, 0x0f, 0x83, 0xbf,
	0x18, 0x3b, 0x83, 0xae, 0x1d, 0xe3, 0xeb, 0xa3, 0xb6, 0xab, 0xb6, 0xc5, 0xcc, 0x3f, 0x83, 0x0d,
	0x0b, 0xde, 0x3d, 0x21, 0x05, 0xf9, 0xac, 0x2e, 0xf6, 0xfb, 0xeb, 0xad, 0xd8, 0x8c, 0x66, 0x6f,
	0xcb, 0x48, 0xca, 0x79, 0x61, 0x12, 0xb6, 0xf4, 0x65, 0xb8, 0x5f, 0xb5, 0x57, 0xf7, 0x8f, 0xb0,
	0x63, 0x3b, 0x19, 0xd1, 0x87, 0x6d, 0x55, 0x1d, 0xca, 0x79, 0x59, 0x23, 0xf2, 0x26, 0xa0, 0x6f,
	0xfc, 0xf8, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x1f, 0xc1, 0xad, 0xda, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DepartmentClient is the client API for Department service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DepartmentClient interface {
	CreateDep(ctx context.Context, in *CreReq, opts ...grpc.CallOption) (*CreInfoRsp, error)
	GetDep(ctx context.Context, in *DepReq, opts ...grpc.CallOption) (*DepInfoRsp, error)
	GetDeps(ctx context.Context, in *DepReq, opts ...grpc.CallOption) (*DepsInfoRsp, error)
	UpdDep(ctx context.Context, in *UdpReq, opts ...grpc.CallOption) (*DepInfoRsp, error)
	DelDep(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DepInfoRsp, error)
	Register(ctx context.Context, in *RegReq, opts ...grpc.CallOption) (*Empty, error)
	GetRegister(ctx context.Context, in *RegReq, opts ...grpc.CallOption) (*GetRegRsp, error)
	GetRegByDepIds(ctx context.Context, in *RbdReq, opts ...grpc.CallOption) (*RbdRsp, error)
	GetRegisterMsg(ctx context.Context, in *UserUid, opts ...grpc.CallOption) (*RegInfo, error)
	MarkUser(ctx context.Context, in *MarkInfo, opts ...grpc.CallOption) (*Empty, error)
}

type departmentClient struct {
	cc *grpc.ClientConn
}

func NewDepartmentClient(cc *grpc.ClientConn) DepartmentClient {
	return &departmentClient{cc}
}

func (c *departmentClient) CreateDep(ctx context.Context, in *CreReq, opts ...grpc.CallOption) (*CreInfoRsp, error) {
	out := new(CreInfoRsp)
	err := c.cc.Invoke(ctx, "/department.department/createDep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) GetDep(ctx context.Context, in *DepReq, opts ...grpc.CallOption) (*DepInfoRsp, error) {
	out := new(DepInfoRsp)
	err := c.cc.Invoke(ctx, "/department.department/getDep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) GetDeps(ctx context.Context, in *DepReq, opts ...grpc.CallOption) (*DepsInfoRsp, error) {
	out := new(DepsInfoRsp)
	err := c.cc.Invoke(ctx, "/department.department/getDeps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) UpdDep(ctx context.Context, in *UdpReq, opts ...grpc.CallOption) (*DepInfoRsp, error) {
	out := new(DepInfoRsp)
	err := c.cc.Invoke(ctx, "/department.department/updDep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) DelDep(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DepInfoRsp, error) {
	out := new(DepInfoRsp)
	err := c.cc.Invoke(ctx, "/department.department/DelDep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) Register(ctx context.Context, in *RegReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/department.department/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) GetRegister(ctx context.Context, in *RegReq, opts ...grpc.CallOption) (*GetRegRsp, error) {
	out := new(GetRegRsp)
	err := c.cc.Invoke(ctx, "/department.department/GetRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) GetRegByDepIds(ctx context.Context, in *RbdReq, opts ...grpc.CallOption) (*RbdRsp, error) {
	out := new(RbdRsp)
	err := c.cc.Invoke(ctx, "/department.department/GetRegByDepIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) GetRegisterMsg(ctx context.Context, in *UserUid, opts ...grpc.CallOption) (*RegInfo, error) {
	out := new(RegInfo)
	err := c.cc.Invoke(ctx, "/department.department/GetRegisterMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentClient) MarkUser(ctx context.Context, in *MarkInfo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/department.department/MarkUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DepartmentServer is the server API for Department service.
type DepartmentServer interface {
	CreateDep(context.Context, *CreReq) (*CreInfoRsp, error)
	GetDep(context.Context, *DepReq) (*DepInfoRsp, error)
	GetDeps(context.Context, *DepReq) (*DepsInfoRsp, error)
	UpdDep(context.Context, *UdpReq) (*DepInfoRsp, error)
	DelDep(context.Context, *DelReq) (*DepInfoRsp, error)
	Register(context.Context, *RegReq) (*Empty, error)
	GetRegister(context.Context, *RegReq) (*GetRegRsp, error)
	GetRegByDepIds(context.Context, *RbdReq) (*RbdRsp, error)
	GetRegisterMsg(context.Context, *UserUid) (*RegInfo, error)
	MarkUser(context.Context, *MarkInfo) (*Empty, error)
}

// UnimplementedDepartmentServer can be embedded to have forward compatible implementations.
type UnimplementedDepartmentServer struct {
}

func (*UnimplementedDepartmentServer) CreateDep(ctx context.Context, req *CreReq) (*CreInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDep not implemented")
}
func (*UnimplementedDepartmentServer) GetDep(ctx context.Context, req *DepReq) (*DepInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDep not implemented")
}
func (*UnimplementedDepartmentServer) GetDeps(ctx context.Context, req *DepReq) (*DepsInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeps not implemented")
}
func (*UnimplementedDepartmentServer) UpdDep(ctx context.Context, req *UdpReq) (*DepInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdDep not implemented")
}
func (*UnimplementedDepartmentServer) DelDep(ctx context.Context, req *DelReq) (*DepInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelDep not implemented")
}
func (*UnimplementedDepartmentServer) Register(ctx context.Context, req *RegReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedDepartmentServer) GetRegister(ctx context.Context, req *RegReq) (*GetRegRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegister not implemented")
}
func (*UnimplementedDepartmentServer) GetRegByDepIds(ctx context.Context, req *RbdReq) (*RbdRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegByDepIds not implemented")
}
func (*UnimplementedDepartmentServer) GetRegisterMsg(ctx context.Context, req *UserUid) (*RegInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegisterMsg not implemented")
}
func (*UnimplementedDepartmentServer) MarkUser(ctx context.Context, req *MarkInfo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkUser not implemented")
}

func RegisterDepartmentServer(s *grpc.Server, srv DepartmentServer) {
	s.RegisterService(&_Department_serviceDesc, srv)
}

func _Department_CreateDep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).CreateDep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/CreateDep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).CreateDep(ctx, req.(*CreReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_GetDep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetDep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/GetDep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetDep(ctx, req.(*DepReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_GetDeps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetDeps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/GetDeps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetDeps(ctx, req.(*DepReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_UpdDep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UdpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).UpdDep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/UpdDep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).UpdDep(ctx, req.(*UdpReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_DelDep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).DelDep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/DelDep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).DelDep(ctx, req.(*DelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).Register(ctx, req.(*RegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_GetRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/GetRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetRegister(ctx, req.(*RegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_GetRegByDepIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RbdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetRegByDepIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/GetRegByDepIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetRegByDepIds(ctx, req.(*RbdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_GetRegisterMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserUid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).GetRegisterMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/GetRegisterMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).GetRegisterMsg(ctx, req.(*UserUid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Department_MarkUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentServer).MarkUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/department.department/MarkUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentServer).MarkUser(ctx, req.(*MarkInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Department_serviceDesc = grpc.ServiceDesc{
	ServiceName: "department.department",
	HandlerType: (*DepartmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createDep",
			Handler:    _Department_CreateDep_Handler,
		},
		{
			MethodName: "getDep",
			Handler:    _Department_GetDep_Handler,
		},
		{
			MethodName: "getDeps",
			Handler:    _Department_GetDeps_Handler,
		},
		{
			MethodName: "updDep",
			Handler:    _Department_UpdDep_Handler,
		},
		{
			MethodName: "DelDep",
			Handler:    _Department_DelDep_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Department_Register_Handler,
		},
		{
			MethodName: "GetRegister",
			Handler:    _Department_GetRegister_Handler,
		},
		{
			MethodName: "GetRegByDepIds",
			Handler:    _Department_GetRegByDepIds_Handler,
		},
		{
			MethodName: "GetRegisterMsg",
			Handler:    _Department_GetRegisterMsg_Handler,
		},
		{
			MethodName: "MarkUser",
			Handler:    _Department_MarkUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "department.proto",
}
