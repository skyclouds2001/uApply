// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	org "uapply-micro/service/organization/cmd/api/internal/handler/org"
	"uapply-micro/service/organization/cmd/api/internal/svc"

	"github.com/tal-tech/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/org/login",
				Handler: loginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/org/reg",
				Handler: RegisterHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/org/cre-dep",
				Handler: org.CreateDepHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/org/dep/:id",
				Handler: org.GetDepHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/org/deps",
				Handler: org.GetAllDepHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/org/dep/:id",
				Handler: org.UpdDepHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/org/dep/:id",
				Handler: org.DelDepHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/org/add-time",
				Handler: org.AddTimeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/org/get-data",
				Handler: org.GetDataHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/org/enroll-time/:id",
				Handler: org.GetEnrollTimeHandler(serverCtx),
			},
		},
	)
}
