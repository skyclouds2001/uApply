// Code generated by protoc-gen-go. DO NOT EDIT.
// source: organization.proto

package organization

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_56d1be4e19214602, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Time struct {
	Orgid                int32    `protobuf:"varint,1,opt,name=orgid" json:"orgid,omitempty"`
	OrgName              string   `protobuf:"bytes,2,opt,name=orgName" json:"orgName,omitempty"`
	Start                int64    `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,4,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_56d1be4e19214602, []int{1}
}
func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (dst *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(dst, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetOrgid() int32 {
	if m != nil {
		return m.Orgid
	}
	return 0
}

func (m *Time) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *Time) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Time) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type TimeRsp struct {
	TimeInfo             []*Time  `protobuf:"bytes,1,rep,name=timeInfo" json:"timeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeRsp) Reset()         { *m = TimeRsp{} }
func (m *TimeRsp) String() string { return proto.CompactTextString(m) }
func (*TimeRsp) ProtoMessage()    {}
func (*TimeRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_56d1be4e19214602, []int{2}
}
func (m *TimeRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRsp.Unmarshal(m, b)
}
func (m *TimeRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRsp.Marshal(b, m, deterministic)
}
func (dst *TimeRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRsp.Merge(dst, src)
}
func (m *TimeRsp) XXX_Size() int {
	return xxx_messageInfo_TimeRsp.Size(m)
}
func (m *TimeRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRsp.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRsp proto.InternalMessageInfo

func (m *TimeRsp) GetTimeInfo() []*Time {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "organization.Empty")
	proto.RegisterType((*Time)(nil), "organization.Time")
	proto.RegisterType((*TimeRsp)(nil), "organization.TimeRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Organization service

type OrganizationClient interface {
	GetAllOrgTime(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TimeRsp, error)
}

type organizationClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationClient(cc *grpc.ClientConn) OrganizationClient {
	return &organizationClient{cc}
}

func (c *organizationClient) GetAllOrgTime(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TimeRsp, error) {
	out := new(TimeRsp)
	err := grpc.Invoke(ctx, "/organization.organization/GetAllOrgTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Organization service

type OrganizationServer interface {
	GetAllOrgTime(context.Context, *Empty) (*TimeRsp, error)
}

func RegisterOrganizationServer(s *grpc.Server, srv OrganizationServer) {
	s.RegisterService(&_Organization_serviceDesc, srv)
}

func _Organization_GetAllOrgTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetAllOrgTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetAllOrgTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetAllOrgTime(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "organization.organization",
	HandlerType: (*OrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllOrgTime",
			Handler:    _Organization_GetAllOrgTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization.proto",
}

func init() { proto.RegisterFile("organization.proto", fileDescriptor_organization_56d1be4e19214602) }

var fileDescriptor_organization_56d1be4e19214602 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2f, 0x4a, 0x4f,
	0xcc, 0xcb, 0xac, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x53, 0x62, 0xe7, 0x62, 0x75, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0x8a, 0xe3, 0x62, 0x09,
	0xc9, 0xcc, 0x4d, 0x15, 0x12, 0xe1, 0x62, 0xcd, 0x2f, 0x4a, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60,
	0xd4, 0x60, 0x0d, 0x82, 0x70, 0x84, 0x24, 0xb8, 0xd8, 0xf3, 0x8b, 0xd2, 0xfd, 0x12, 0x73, 0x53,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x90, 0xfa, 0xe2, 0x92, 0xc4, 0xa2, 0x12,
	0x09, 0x66, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x08, 0x47, 0x48, 0x80, 0x8b, 0x39, 0x35, 0x2f, 0x45,
	0x82, 0x05, 0x2c, 0x06, 0x62, 0x2a, 0x59, 0x72, 0xb1, 0x83, 0xcc, 0x0f, 0x2a, 0x2e, 0x10, 0xd2,
	0xe3, 0xe2, 0x28, 0xc9, 0xcc, 0x4d, 0xf5, 0xcc, 0x4b, 0xcb, 0x97, 0x60, 0x54, 0x60, 0xd6, 0xe0,
	0x36, 0x12, 0xd2, 0x43, 0x71, 0x28, 0x58, 0x21, 0x5c, 0x8d, 0x91, 0x37, 0x17, 0x8a, 0x9b, 0x85,
	0xac, 0xb9, 0x78, 0xdd, 0x53, 0x4b, 0x1c, 0x73, 0x72, 0xfc, 0x8b, 0xd2, 0xc1, 0x6e, 0x16, 0x46,
	0xd5, 0x0e, 0xf6, 0x90, 0x94, 0x28, 0x16, 0x33, 0x8b, 0x0b, 0x92, 0xd8, 0xc0, 0xa1, 0x60, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x44, 0x81, 0x29, 0x1b, 0x01, 0x00, 0x00,
}
