// Code generated by goctl. DO NOT EDIT!
// Source: organization.proto

package organizationclient

import (
	"context"

	"uapply-micro/service/organization/cmd/rpc/organization"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty   = organization.Empty
	Time    = organization.Time
	TimeRsp = organization.TimeRsp

	Organization interface {
		GetAllOrgTime(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TimeRsp, error)
	}

	defaultOrganization struct {
		cli zrpc.Client
	}
)

func NewOrganization(cli zrpc.Client) Organization {
	return &defaultOrganization{
		cli: cli,
	}
}

func (m *defaultOrganization) GetAllOrgTime(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TimeRsp, error) {
	client := organization.NewOrganizationClient(m.cli.Conn())
	return client.GetAllOrgTime(ctx, in, opts...)
}
